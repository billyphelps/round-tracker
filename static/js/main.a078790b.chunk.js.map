{"version":3,"sources":["AddPlayer/AddPlayer.js","Control Button/ControlButton.js","Player/Player.js","PlayerList/PlayerList.js","Main/Main.js","App.js","reportWebVitals.js","index.js"],"names":["AddPlayer","props","callbackFunction","e","preventDefault","name","document","getElementById","value","onAddPlayer","state","selected","excluded","className","id","onSubmit","type","onClick","React","Component","ControlButton","this","label","Player","updateParent","newState","onUpdate","removePlayer","stopPropagation","onRemove","toggleSelected","bind","toggleExcluded","clss","chosen","onContextMenu","games","PlayerList","handleUpdatePlayer","playerName","onUpdatePlayer","handleRemovePlayer","onRemovePlayer","players","Object","keys","map","i","Main","handleNewPlayer","currentPlayers","setState","prop","choosePlayer","currentState","selectedPlayers","filter","player","potentialPlayers","chosenPlayers","sort","a","b","slice","length","roundComplete","resetGames","console","log","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a078790b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './AddPlayer.css';\r\n\r\nclass AddPlayer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selected: false,\r\n            excluded: false,\r\n        }\r\n    }\r\n\r\n    callbackFunction = (e) => {\r\n        e.preventDefault();\r\n        const name = document.getElementById(\"pname\").value;\r\n        this.props.onAddPlayer(name);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='form'>\r\n                <form id=\"frm1\" onSubmit={(e) => this.callbackFunction(e)}>\r\n                    <input type=\"button\" onClick={(e) => this.callbackFunction(e)} value=\"Submit\"/>\r\n                    <input type=\"text\" id=\"pname\"/>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddPlayer;\r\n","import React from \"react\";\r\nimport './ControlButton.css';\r\n\r\nclass ControlButton extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <input type=\"button\" onClick={this.props.onClick} value={this.props.label}/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ControlButton;\r\n","import React from \"react\";\r\nimport './Player.css';\r\n\r\nclass Player extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.toggleSelected = this.toggleSelected.bind(this);\r\n        this.toggleExcluded = this.toggleExcluded.bind(this);\r\n    }\r\n\r\n    updateParent = (newState) => {\r\n        this.props.onUpdate(this.props.name, newState);\r\n    }\r\n\r\n    removePlayer = (e) => {\r\n        e.stopPropagation();\r\n        this.props.onRemove(this.props.name);\r\n    }\r\n\r\n    toggleSelected(e) {\r\n        e.preventDefault()\r\n        this.updateParent({selected: !this.props.selected, excluded: false});\r\n    }\r\n\r\n    toggleExcluded(e) {\r\n        e.preventDefault()\r\n        this.updateParent({excluded: !this.props.excluded, selected: false});\r\n    }\r\n\r\n    render() {\r\n        let clss = 'container';\r\n        if (this.props.chosen) {\r\n            clss += ' chosen';\r\n        } \r\n        if(this.props.selected) {\r\n            clss += ' selected';\r\n        } else {\r\n            if (this.props.excluded) {\r\n                clss += ' excluded';\r\n            } else {\r\n                clss += ' default';\r\n            }\r\n        }\r\n        return (\r\n            <div className={clss} onClick={this.toggleSelected} onContextMenu={(e)=> this.toggleExcluded(e)}>\r\n                <p className=\"title\">\r\n                    {this.props.name} - {this.props.games} games\r\n                </p>\r\n                <input type='button' value='X' onClick={(e)=> this.removePlayer(e)}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Player;\r\n","import React from \"react\";\r\nimport Player from \"../Player/Player\";\r\nimport './PlayerList.css';\r\n\r\nclass PlayerList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleUpdatePlayer = (playerName, newState) => {\r\n        this.props.onUpdatePlayer(playerName, newState);\r\n    }\r\n    \r\n    handleRemovePlayer = (playerName) => {\r\n        this.props.onRemovePlayer(playerName);\r\n    }\r\n\r\n    render() {\r\n        \r\n        const players = Object.keys(this.props.players).map(i => (\r\n            <Player name={i} onUpdate={this.handleUpdatePlayer} onRemove={this.handleRemovePlayer} \r\n            selected={this.props.players[i].selected} excluded={this.props.players[i].excluded} \r\n            chosen={this.props.players[i].chosen} games={this.props.players[i].games}/>\r\n        ))\r\n        \r\n        return (\r\n            <div className='playerContainer'>\r\n                {players}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PlayerList;\r\n","import React from \"react\";\nimport './Main.css';\nimport AddPlayer from \"../AddPlayer/AddPlayer\";\nimport ControlButton from \"../Control Button/ControlButton\";\nimport PlayerList from \"../PlayerList/PlayerList\";\n\nclass Main extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      players: {\n        'Player 1': {selected: false, excluded: false, chosen: false, games: 0}\n      },\n    }\n  }\n\n  handleNewPlayer = (playerName) => {\n    const currentPlayers = this.state.players;\n    currentPlayers[playerName] = {selected: false, excluded: false, chosen: false, games: 0};\n    this.setState({players: currentPlayers});\n  }\n\n  handleUpdatePlayer = (playerName, newState) => {\n    let currentPlayers = this.state.players;\n    Object.keys(newState).map(prop => {currentPlayers[playerName][prop] = newState[prop]});\n    this.setState({players: currentPlayers});\n  }\n\n  handleRemovePlayer = (playerName) => {\n    let currentPlayers = this.state.players;\n    delete currentPlayers[playerName];\n    this.setState({players: currentPlayers});\n  }\n\n  choosePlayer = () => {\n    let currentState = this.state.players;\n\n    //players selected to be in the next round\n    const selectedPlayers = Object.keys(currentState).filter(player => currentState[player].selected);\n\n    //players not selected and also not excluded\n    let potentialPlayers = Object.keys(currentState).filter(player => !currentState[player].selected && !currentState[player].excluded);\n    \n    //sort players by games played\n    potentialPlayers = potentialPlayers.sort((a,b) => {return currentState[a].games - currentState[b].games; });\n\n    //get amount of players needed\n    let chosenPlayers = potentialPlayers.slice(0, (6 - selectedPlayers.length));\n\n    selectedPlayers.map(i => (\n      currentState[i].chosen = true\n    ))\n    chosenPlayers.map(i => (\n      currentState[i].chosen = true\n    ))\n\n    this.setState({players: currentState});\n  }\n\n  roundComplete = () => {\n    let currentState = this.state.players;\n    const chosenPlayers = Object.keys(currentState).filter(player => currentState[player].chosen);\n    chosenPlayers.map(player => {\n      currentState[player].chosen=false;\n      currentState[player].games++;\n    })\n    this.setState({players: currentState});\n  }\n\n  resetGames = () => {\n    let currentState = this.state.players;\n    Object.keys(currentState).map(player => {\n      currentState[player].chosen=false;\n      currentState[player].games=0;\n    })\n    this.setState({players: currentState});\n  }\n\n  render() {\n    console.log(this.state);\n    return (\n      <div className='mainContainer'>\n        <div className='banner'>\n          <AddPlayer onAddPlayer={this.handleNewPlayer}/>\n        </div>\n        <div className='right'>\n          <PlayerList players={this.state.players} onUpdatePlayer={this.handleUpdatePlayer} onRemovePlayer={this.handleRemovePlayer}/>\n          <div className='footer'>\n            <ControlButton onClick={this.choosePlayer} label='Choose Players'/>\n            <ControlButton onClick={this.roundComplete} label='Round Complete'/>\n            <ControlButton onClick={this.resetGames} label='Reset Games'/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import './App.css';\nimport Main from './Main/Main';\n\nfunction App() {\n  return (\n    <Main/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}